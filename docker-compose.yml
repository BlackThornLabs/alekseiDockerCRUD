services:
  postgres:
    image: postgres:17.0-alpine
    container_name: postgres
    environment:
      POSTGRES_DB: user_service
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: +2422Ps
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - crud-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka:
    image: apache/kafka:3.9.0
    container_name: kafka
    ports:
      - "9092:9092"
      - "9093:9093"
    volumes:
      - kafka_data:/tmp/kraft-combined-logs
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: controller,broker
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    networks:
      - crud-network
    healthcheck:
      test: [ "CMD", "sh", "-c", "echo | telnet localhost 9092 2>/dev/null | grep Connected" ]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 60s

  service-discovery:
    build:
      context: /service-discovery/.
    container_name: service-discovery
    ports:
      - "8761:8761"
    environment:
      SPRING_PROFILES_ACTIVE: docker
    networks:
      - crud-network
    healthcheck:
      test: [ "CMD", "sh", "-c", "if [ -f /tmp/application.pid ]; then exit 0; else exit 1; fi" ]
      interval: 30s
      timeout: 10s
      retries: 5

  config-server:
    image: crud-service-config-server
    environment:
      - SPRING_PROFILES_ACTIVE=native,docker
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://service-discovery:8761/eureka
    ports:
      - "8888:8888"
    build:
      context: /config-server/.
    container_name: config-server
    networks:
      - crud-network
    healthcheck:
      test: [ "CMD", "sh", "-c", "if [ -f /tmp/application.pid ]; then exit 0; else exit 1; fi" ]
      interval: 30s
      timeout: 10s
      retries: 5

  user-service:
    build:
      context: /user-service/.
    container_name: user-service
    ports:
      - "8081:8081"
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      config-server:
        condition: service_healthy
      service-discovery:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - crud-network

  notification-service:
    build:
      context: /notification-service/.
    container_name: notification-service
    ports:
      - "8082:8082"
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      config-server:
        condition: service_healthy
      service-discovery:
        condition: service_healthy
      kafka:
        condition: service_started
    networks:
      - crud-network

  gateway-api:
    build:
      context: /gateway-api/.
#      dockerfile: gateway-api/Dockerfile
    container_name: gateway-api
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      config-server:
        condition: service_healthy
      service-discovery:
        condition: service_healthy
      user-service:
        condition: service_started
      notification-service:
        condition: service_started
    networks:
      - crud-network

volumes:
  postgres_data:
  kafka_data:

networks:
  crud-network:
    driver: bridge